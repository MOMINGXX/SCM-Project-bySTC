C51 COMPILER V9.60.7.0   DEAL                                                              04/16/2023 00:34:27 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE DEAL
OBJECT MODULE PLACED IN .\Objects\Deal.obj
COMPILER INVOKED BY: E:\Keil5\C51\BIN\C51.EXE User\Deal.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(.\HardWare;.\User;.\Libr
                    -ary;.\Library) DEBUG OBJECTEXTEND PRINT(.\Listings\Deal.lst) OBJECT(.\Objects\Deal.obj)

line level    source

   1          #include "Deal.h"
   2          
   3          //Alert_Temp[0] 高温报警值      Alert_Temp[1]           低温报警值
   4          
   5          uint16_t CRC;
   6          uint8_t Alert_Temp[2];
   7          char TempH,TempL,HumiH,HumiL;
   8          float T;
   9          uint8_t Mode = 0;
  10          uint8_t KeyNum = 0;
  11          
  12          /****
  13                  * @brief        数据处理 初始化                           
  14                  * @param        无
  15                  * @return   无  
  16                  * Sample usage:Deal_Init();
  17                  * note: 最低为负值  但存储的是正值 所以会在     OLED_Alert_Temp()
  18                  *               中处理
  19              */
  20          void Deal_Init()
  21          {
  22   1          Uart_Init(UART_1,GPIORX_P30,GPIOTX_P31,9600,TIM_1);
  23   1              Timer0_Init();
  24   1              DHT11_Init();
  25   1              OLED_Init();
  26   1              OLED_Clear();
  27   1              
  28   1              //如果阈值非法，则设为默认值
  29   1              AT24C02_Sequential_Read(0,Alert_Temp,2);
  30   1              if(Alert_Temp[0] > 125 || Alert_Temp[1] <-55 || Alert_Temp[0] <= Alert_Temp[1])
  31   1              {
  32   2                      Alert_Temp[0] = 30;
  33   2                      Alert_Temp[1] = 10;
  34   2              }
  35   1      }
  36          
  37          /****
  38                  * @brief        显示DS18B20 测得温度                      
  39                  * @param        x       OLED 显示行位置  x = 0(黄色) 2 4 6
  40                  * @return   无  
  41                  * Sample usage:OLED_DS18B20_Temp(2);
  42              */
  43          void OLED_DS18B20_Temp(uint8_t x)
  44          {
  45   1              if((x % 2 == 0) && (x <= 6) && (x >= 0))
  46   1              {
  47   2                      OLED_ShowCHinese(1,x,11);
  48   2                      OLED_ShowCHinese(16,x,12);
  49   2                      OLED_ShowChar(32,x+1,':',2);    
  50   2                      
  51   2                      OLED_ShowCHinese(92,x,14);
  52   2                      
  53   2                      DS18B20_ConvertT();
  54   2                      T=DS18B20_ReadT();
C51 COMPILER V9.60.7.0   DEAL                                                              04/16/2023 00:34:27 PAGE 2   

  55   2                      //printf("\r\nwd:>%f\n",T);
  56   2                      if(T<0)
  57   2                      {
  58   3                              OLED_ShowChar(74,x+1,'.',2);
  59   3                              OLED_ShowChar(43,x,'-',16);
  60   3                              OLED_ShowNum(49,x,T,3,16);
  61   3                              OLED_ShowNum(82,x,(uint32_t)(T*10000)%10000,2,16);
  62   3                      }
  63   2                      else OLED_ShowChar(64,x+1,'.',2);
  64   2                      OLED_ShowNum(39,x,T,3,16);
  65   2                      OLED_ShowNum(72,x,(uint32_t)(T*10000)%10000,2,16);
  66   2              }
  67   1              else
  68   1              {
  69   2                      OLED_ShowString(1,x,"Wrong Position!",16);
  70   2              }
  71   1      
  72   1              if (Flag1)
  73   1              {
  74   2                      CRC = CRC_Table((uint8_t *)&RXPACKAGE, RXPACKAGE.DATA_Len - 2);
  75   2                      if (((RXPACKAGE.CRC16 & 0xFF) == (CRC & 0xFF)) && ((RXPACKAGE.CRC16 >> 8) == (CRC >> 8)))
  76   2                      {
  77   3                              if(0x11 == RXPACKAGE.RX_CMD)                    //      A5 6A 11 06 8E A6
  78   3                              {
  79   4                                      printf("DS18B20 Temp: %.2f ℃\n",T);
  80   4                              }
  81   3                              else if(0x12 == RXPACKAGE.RX_CMD)               //              A5 6A 12 06 8E 56
  82   3                              {
  83   4                                      printf("TempH Warning: %d ℃\n",Alert_Temp[0]);
  84   4                                      printf("TempL Warning: %d ℃\n",Alert_Temp[1]);
  85   4                              }
  86   3                      }
  87   2                      else
  88   2                      {
  89   3                              printf("DS18B20 Check ERROR\n");
  90   3                      }
  91   2                      Flag1 = 0;
  92   2              }
  93   1      
  94   1      }
  95          
  96          /****
  97                  * @brief        显示DHT11 测得温度                        
  98                  * @param        无
  99                  * @return   无  
 100                  * Sample usage:OLED_DHT11_Temp();
 101              */
 102          void OLED_DHT11_Temp()
 103          {
 104   1              
 105   1          DHT11_Read_Data(&TempH,&TempL,&HumiH,&HumiL);       
 106   1              
 107   1              /*
 108   1              printf("Tem:%d ℃\r\n", (int)TempH);
 109   1              printf("Tem:%d ℃\r\n", (int)TempL);
 110   1          printf("Hum:%d %%H\r\n", (int)HumiH);
 111   1          printf("Hum:%d %%H\r\n", (int)HumiL);
 112   1          */
 113   1              
 114   1              OLED_ShowChar(47,6,'0'+(TempH/10),16);
 115   1              OLED_ShowChar(55,6,'0'+(TempH%10),16);
 116   1              OLED_ShowChar(72,6,'0'+(TempL/10),16);
C51 COMPILER V9.60.7.0   DEAL                                                              04/16/2023 00:34:27 PAGE 3   

 117   1              OLED_ShowChar(80,6,'0'+(TempL%10),16);  
 118   1              OLED_ShowCHinese(1,6,11);
 119   1              OLED_ShowCHinese(16,6,12);
 120   1              OLED_ShowChar(32,7,':',2);      
 121   1              OLED_ShowChar(64,7,'.',2);
 122   1              OLED_ShowCHinese(92,6,14);
 123   1              
 124   1              OLED_ShowChar(47,4,'0'+(HumiH/10),16);
 125   1              OLED_ShowChar(55,4,'0'+(HumiH%10),16);
 126   1              OLED_ShowChar(72,4,'0'+(HumiL/10),16);
 127   1              OLED_ShowChar(80,4,'0'+(HumiL%10),16);
 128   1              OLED_ShowCHinese(1,4,13);
 129   1              OLED_ShowCHinese(16,4,12);
 130   1              OLED_ShowChar(32,5,':',2);      
 131   1              OLED_ShowChar(64,5,'.',2);
 132   1              OLED_ShowString(92,4,"%RH",16);
 133   1      
 134   1              
 135   1              if (Flag1)
 136   1              {
 137   2                      CRC = CRC_Table((uint8_t *)&RXPACKAGE, RXPACKAGE.DATA_Len - 2);
 138   2                      if (((RXPACKAGE.CRC16 & 0xFF) == (CRC & 0xFF)) && ((RXPACKAGE.CRC16 >> 8) == (CRC >> 8)))
 139   2                      {
 140   3                              if(0x13 == RXPACKAGE.RX_CMD)                    //      A5 6A 13 06 8F C6
 141   3                              {
 142   4                                      printf("DHT11 Temp: %d.%d ℃\n",(int)TempH,(int)TempL);
 143   4                                      printf("DHT11 Humi: %d.%d %%H\n",(int)HumiH,(int)HumiL);
 144   4                              }
 145   3                              else
 146   3                              {
 147   4                                      printf("Read DHT11 Temp CMD ERROR\n");
 148   4                              }
 149   3                      }
 150   2                      else
 151   2                      {
 152   3                              printf("DHT11 Check ERROR\n");
 153   3                      }
 154   2                      Flag1 = 0;
 155   2              }
 156   1      }
 157          
 158          /****
 159                  * @brief        显示DHT11 测得温度                        
 160                  * @param        无
 161                  * @return   无  
 162                  * Sample usage:OLED_DS18B20_Temp(2);
 163              */
 164          void OLED_Alert_Temp()
 165          {
 166   1              OLED_ShowString(1,2,"TempH:",16);
 167   1          OLED_ShowString(1,4,"TempL:",16);
 168   1      
 169   1              OLED_ShowNum(56,2,Alert_Temp[0],3,16);
 170   1              OLED_ShowChar(50,2,'+',16);
 171   1              OLED_ShowChar(50,4,'-',16);
 172   1              OLED_ShowNum(56,4,Alert_Temp[1],3,16);
 173   1              OLED_ShowCHinese(92,2,14);
 174   1              OLED_ShowCHinese(92,4,14);
 175   1      }
 176          
 177          /****
 178                  * @brief        预警温度设置                      
C51 COMPILER V9.60.7.0   DEAL                                                              04/16/2023 00:34:27 PAGE 4   

 179                  * @param        无
 180                  * @return   无  
 181                  * Sample usage:Alert_Temp_Set();
 182              */
 183          void Alert_Temp_Set()
 184          {
 185   1              if(KeyNum)
 186   1              {
 187   2                      if(4 == KeyNum)                                                 //高温预警值 ++
 188   2                      {
 189   3                              Alert_Temp[0]++;
 190   3                              if(Alert_Temp[0] > 125)
 191   3                              {
 192   4                                      Alert_Temp[0] = 125;
 193   4                              }
 194   3                      }
 195   2                      else if(5 == KeyNum)                                    //高温预警值 --
 196   2                      {
 197   3                              Alert_Temp[0]--;
 198   3                              if(Alert_Temp[0] <= Alert_Temp[1])
 199   3                              {
 200   4                                      Alert_Temp[0]++;
 201   4                              } 
 202   3                      }
 203   2                      else if(6 == KeyNum)                                    //低温预警值 ++
 204   2                      {
 205   3                              Alert_Temp[1]++;
 206   3                              if(Alert_Temp[1] >= Alert_Temp[0])
 207   3                              {
 208   4                                      Alert_Temp[1]--;
 209   4                              } 
 210   3                      }
 211   2                      else if(7 == KeyNum)                                    //低温预警值 --
 212   2                      {
 213   3                              Alert_Temp[1]--;
 214   3                              if(Alert_Temp[1] <= 0)
 215   3                              {
 216   4                                      Alert_Temp[1] = 55;
 217   4                              }
 218   3                      }
 219   2              }
 220   1      
 221   1              if (Flag1)
 222   1              {
 223   2                      CRC = CRC_Table((uint8_t *)&RXPACKAGE, RXPACKAGE.DATA_Len - 2);
 224   2                      if (((RXPACKAGE.CRC16 & 0xFF) == (CRC & 0xFF)) && ((RXPACKAGE.CRC16 >> 8) == (CRC >> 8)))
 225   2                      {
 226   3                              if(0x14 == RXPACKAGE.RX_CMD)                    //      A5 6A 14 08 23 0A 1D E2
 227   3                              {
 228   4                                      Alert_Temp[0] = RXPACKAGE.RX_Data[0];
 229   4                                      Alert_Temp[1] = RXPACKAGE.RX_Data[1];
 230   4                                      printf("Warning Temp Set Done\n");
 231   4                              }
 232   3                              else
 233   3                              {
 234   4                                      printf("Warning Temp Set CMD ERROR\n");
 235   4                              }
 236   3                      }
 237   2                      else
 238   2                      {
 239   3                              printf("Warning Temp Set Check ERROR\n");
 240   3                      }
C51 COMPILER V9.60.7.0   DEAL                                                              04/16/2023 00:34:27 PAGE 5   

 241   2                      Flag1 = 0;
 242   2              }
 243   1              
 244   1              AT24C02_Page_Write(0,Alert_Temp,2);             //存储预警值
 245   1              OLED_Alert_Temp();
 246   1      }
 247          
 248          /****
 249                  * @brief        按键扫描                          
 250                  * @param        无
 251                  * @return   无  
 252                  * Sample usage:Key_Scan();
 253              */
 254          void Key_Scan()
 255          {
 256   1              KeyNum = key();
 257   1      }
 258          
 259          /****
 260                  * @brief        模式的选择                                        
 261                  * @param        无
 262                  * @return   无  
 263                  * Sample usage:Mode_Select();
 264              */
 265          void Mode_Select()
 266          {
 267   1              if(1 == KeyNum)
 268   1              {
 269   2                      OLED_Clear();
 270   2                      Mode = 0;               //显示温湿度
 271   2              }
 272   1              else if(2 == KeyNum)
 273   1              {
 274   2                      OLED_Clear();
 275   2                      Mode = 1;               //显示预警值
 276   2              }
 277   1              else if(3 == KeyNum)
 278   1              {
 279   2                      OLED_Clear();
 280   2                      Mode = 2;               //设置预警值
 281   2              }
 282   1              switch (Mode)
 283   1              {
 284   2                      case 0:
 285   2                              OLED_ShowString(1,0,"Temp Humi Test!",16);
 286   2                              OLED_DS18B20_Temp(2);
 287   2                              OLED_DHT11_Temp();
 288   2                      break;
 289   2                      
 290   2                      case 1:
 291   2                              OLED_ShowString(1,0,"Temp Warning !",16);
 292   2                              OLED_Alert_Temp();
 293   2                      break;
 294   2                      case 2:
 295   2                              OLED_ShowString(1,0,"Temp Alert Set!",16);
 296   2                              Alert_Temp_Set();
 297   2                      break;
 298   2                      default:
 299   2                              OLED_ShowString(1,0,"ERROR !",16);
 300   2                      break;
 301   2              }
 302   1      }
C51 COMPILER V9.60.7.0   DEAL                                                              04/16/2023 00:34:27 PAGE 6   

 303          
 304          /****
 305                  * @brief        温度报警                  
 306                  * @param        无
 307                  * @return   无  
 308                  * Sample usage:Temp_Alarm();
 309              */
 310          void Temp_Alarm()
 311          {
 312   1              Mode_Select();
 313   1              if(T > Alert_Temp[0])
 314   1              {
 315   2                      OLED_Clear();
 316   2                      OLED_DS18B20_Temp(0);
 317   2                      OLED_ShowString(1,2,"Warning...!!!",16);
 318   2                      OLED_ShowString(1,4,"High Temp !!!",16);
 319   2                      Delay(1000);
 320   2              }               
 321   1              else if(T < (0-Alert_Temp[1]))
 322   1              {
 323   2                      OLED_Clear();
 324   2                      OLED_DS18B20_Temp(0);
 325   2                      OLED_ShowString(1,2,"Warning...!!!",16);
 326   2                      OLED_ShowString(1,4,"Low Temp  !!!",16);
 327   2                      Delay(1000);
 328   2              }                        
 329   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1886    ----
   CONSTANT SIZE    =    391    ----
   XDATA SIZE       =     14       1
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
