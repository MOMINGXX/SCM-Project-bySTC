C51 COMPILER V9.60.7.0   MAIN                                                              01/30/2023 23:19:01 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: E:\Keil5\C51\BIN\C51.EXE User\main.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(.\HardWare;.\User;.\Libr
                    -ary;.\Library) DEBUG OBJECTEXTEND PRINT(.\Listings\main.lst) OBJECT(.\Objects\main.obj)

line level    source

   1          #include "DS18B20.h"
   2          #include "UART.h"
   3          #include <stdio.h>
   4          #include "oled.h"
   5          #include "DHT11.h"
   6          
   7          float T;
   8          uint8_t TempBuff[5];
   9          
  10          void OLED_DS18B20_Temp();
  11          void OLED_DHT11_Temp();
  12          
  13          void main()
  14          {
  15   1              Uart_Init(UART_1,GPIORX_P30,GPIOTX_P31,9600,TIM_BRT);   
  16   1              
  17   1              DHT11_Init();
  18   1      
  19   1              OLED_Init();
  20   1              OLED_Clear();
  21   1              OLED_ShowString(1,0,"Temp Humi Test!",16);
  22   1              
  23   1              while(1)
  24   1              {
  25   2                      OLED_DS18B20_Temp();
  26   2                      OLED_DHT11_Temp();
  27   2              }
  28   1      }
  29          
  30          void OLED_DS18B20_Temp()
  31          {
  32   1              OLED_ShowCHinese(1,2,11);
  33   1              OLED_ShowCHinese(16,2,12);
  34   1              OLED_ShowChar(32,3,':',2);      
  35   1              
  36   1              OLED_ShowCHinese(108,2,14);
  37   1              
  38   1              DS18B20_ConvertT();
  39   1              T=DS18B20_ReadT();
  40   1              printf("\r\nwd:>%f\n",T);
  41   1              if(T<0)
  42   1              {
  43   2                      OLED_ShowChar(74,3,'.',2);
  44   2                      OLED_ShowChar(43,2,'-',16);
  45   2                      OLED_ShowNum(49,2,T,3,16);
  46   2                      OLED_ShowNum(82,2,(uint32_t)(T*10000)%10000,3,16);
  47   2              }
  48   1              else OLED_ShowChar(64,3,'.',2);
  49   1              OLED_ShowNum(39,2,T,3,16);
  50   1              OLED_ShowNum(72,2,(uint32_t)(T*10000)%10000,4,16);
  51   1      }
  52          
  53          void OLED_DHT11_Temp()
  54          {
C51 COMPILER V9.60.7.0   MAIN                                                              01/30/2023 23:19:01 PAGE 2   

  55   1              DHT11_Read_Data(TempBuff);      
  56   1              printf("\r\nwdd:>%d\r\n",'0'+(TempBuff[2]/10));
  57   1              printf("%d\r\n",'0'+(TempBuff[2]%10));
  58   1              printf("%d\r\n",'0'+(TempBuff[3]/10));
  59   1              printf("%d\r\n",'0'+(TempBuff[3]%10));
  60   1      
  61   1              printf("\r\nsd:> %d\r\n",'0'+(TempBuff[0]/10));
  62   1              printf("%d\r\n",'0'+(TempBuff[0]%10));
  63   1              printf("%d\r\n",'0'+(TempBuff[1]/10));
  64   1              printf("%d\r\n",'0'+(TempBuff[1]%10));
  65   1              
  66   1              OLED_ShowChar(47,6,'0'+(TempBuff[2]/10),16);
  67   1              OLED_ShowChar(55,6,'0'+(TempBuff[2]%10),16);
  68   1              OLED_ShowChar(72,6,'0'+(TempBuff[3]/10),16);
  69   1              OLED_ShowChar(80,6,'0'+(TempBuff[3]%10),16);    
  70   1              OLED_ShowCHinese(1,6,11);
  71   1              OLED_ShowCHinese(16,6,12);
  72   1              OLED_ShowChar(32,7,':',2);      
  73   1              OLED_ShowChar(64,7,'.',2);
  74   1              OLED_ShowCHinese(92,6,14);
  75   1              
  76   1              OLED_ShowChar(47,4,'0'+(TempBuff[0]/10),16);
  77   1              OLED_ShowChar(55,4,'0'+(TempBuff[0]%10),16);
  78   1              OLED_ShowChar(72,4,'0'+(TempBuff[1]/10),16);
  79   1              OLED_ShowChar(80,4,'0'+(TempBuff[1]%10),16);
  80   1              OLED_ShowCHinese(1,4,13);
  81   1              OLED_ShowCHinese(16,4,12);
  82   1              OLED_ShowChar(32,5,':',2);      
  83   1              OLED_ShowChar(64,5,'.',2);
  84   1              OLED_ShowString(92,4,"%RH",16);
  85   1      }
  86          /*
  87          void OLED_DHT11_Temp()
  88          {
  89                  DHT11_Read_Data(&tempH,&tempL,&humiH,&humiL);   
  90                  
  91                  printf("\r\nwdd:>%d\r\n",'0'+(tempH/10));
  92                  printf("%d\r\n",'0'+(tempH/10));
  93                  printf("%d\r\n",'0'+(tempH/10));
  94                  printf("%d\r\n",'0'+(tempH/10));
  95          
  96                  printf("\r\nsd:> %d\r\n",'0'+(humiH/10));
  97                  printf("%d\r\n",'0'+(humiH/10));
  98                  printf("%d\r\n",'0'+(humiH/10));
  99                  printf("%d\r\n",'0'+(humiH/10));
 100                  
 101                  OLED_ShowChar(47,6,'0'+(tempH/10),16);
 102                  OLED_ShowChar(55,6,'0'+(tempH%10),16);
 103                  OLED_ShowChar(72,6,'0'+(tempL/10),16);
 104                  OLED_ShowChar(80,6,'0'+(tempL%10),16);  
 105                  OLED_ShowCHinese(1,6,11);
 106                  OLED_ShowCHinese(16,6,12);
 107                  OLED_ShowChar(32,7,':',2);      
 108                  OLED_ShowChar(64,7,'.',2);
 109                  OLED_ShowCHinese(92,6,14);
 110                  
 111                  OLED_ShowChar(47,4,'0'+(humiH/10),16);
 112                  OLED_ShowChar(55,4,'0'+(humiH%10),16);
 113                  OLED_ShowChar(72,4,'0'+(humiL/10),16);
 114                  OLED_ShowChar(80,4,'0'+(humiL%10),16);
 115                  OLED_ShowCHinese(1,4,13);
 116                  OLED_ShowCHinese(16,4,12);
C51 COMPILER V9.60.7.0   MAIN                                                              01/30/2023 23:19:01 PAGE 3   

 117                  OLED_ShowChar(32,5,':',2);      
 118                  OLED_ShowChar(64,5,'.',2);
 119                  OLED_ShowString(92,4,"%RH",16);
 120          }*/


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    916    ----
   CONSTANT SIZE    =     59    ----
   XDATA SIZE       =      9    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
